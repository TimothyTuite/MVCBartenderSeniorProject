@model MVCBartender.Models.order

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.orderdBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.orderdBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.orderdBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.costOfOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.costOfOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.costOfOrder, "", new { @class = "text-danger" })
            </div>
        </div>
        <h1>Your Order</h1>
        <ul id="itemsOrdered">
             
        </ul>
        <h1>Menu</h1>
        <table id="itemsTable" class="table">

            <tr>
                <th>
                    ID
                </th>
                <th>
                   Type
                </th>
                <th>
                   Name
                </th>
                <th>
                   Price
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.products)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.price)
                    </td>
                </tr>
            }
        </table>
        <script type="text/javascript">
            var orderItemIds = []; 
            function addRowHandlers() {
                var table = document.getElementById("itemsTable");
                var rows = table.getElementsByTagName("tr");
                for (i = 0; i < rows.length; i++) {
                    var currentRow = table.rows[i];
                    var createClickHandler =
                        function (row) {
                            return function () {
                                var firstCell = row.getElementsByTagName("td")[0];
                                var thirdCell = row.getElementsByTagName("td")[2];
                                var fourthCell = row.getElementsByTagName("td")[3];
                                var id = firstCell.innerHTML;
                                var name = thirdCell.innerHTML;
                                var price = fourthCell.innerHTML;
                                orderItemIds.push({ "id": id, "name" : name, "price": price });
                                alert("pushed id: " + id +"name: "+ name +" length: " + orderItemIds.length);
                                displayOrder(); 
                            };
                        };

                    currentRow.onclick = createClickHandler(currentRow);

                }
            }
            function displayOrder() {
                var list = document.getElementById("itemsOrdered");
                var costInput = document.getElementById("costOfOrder");
                list.innerHTML = '';
                var totalCost = sumOfOrder(); 
                for (i = 0; i < orderItemIds.length; i++) {
                    var id = orderItemIds[i].id;
                    var name = orderItemIds[i].name;
                    var price = orderItemIds[i].price;
                    var entry = document.createElement('li');
                    entry.appendChild(document.createTextNode(name + " $" + price));
                    list.appendChild(entry);
                    console.log('<li>' + orderItemIds[i] + '<li/>')
                }
                costInput.value = totalCost; 
            }
            function sumOfOrder() {
                console.log("getting sum ...")
                var sum = 0 
                for (i = 0; i < orderItemIds.length; i++) {
                    sum += Number(orderItemIds[i].price); 
                }
                console.log(sum)
                return sum 
            }
            window.onload = addRowHandlers();
        </script>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
      
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
